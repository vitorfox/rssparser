group 'com.vteixeira'
version '1.0'

apply plugin: 'java'
apply plugin: 'org.javalite.activejdbc'
apply plugin: 'com.github.johnrengelman.shadow'

buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://repo.javalite.io/' }
        jcenter()
    }
    dependencies {
        classpath group: 'org.javalite', name: 'activejdbc-gradle-plugin', version: '1.4.12-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

repositories {
    mavenCentral()
    maven { url 'http://repo.javalite.io/' }
    jcenter()
}


jar {
    manifest {
        attributes 'Class-Path': '.'
        attributes 'Main-Class': 'Main'
    }
}

task createDockerFile() {
    MyFile dockerFile = myFile('Dockerfile')
    String jarFile = shadowJar.archiveName
    dockerFile.writeln('FROM java:8-alpine')
    dockerFile.appendln('COPY ./build/libs/' + jarFile + ' .')
    dockerFile.appendln('CMD ["java", "-jar", "'+ jarFile +'"]')
}

createDockerFile.dependsOn build
createDockerFile.dependsOn shadowJar

dependencies {
    compile 'com.esotericsoftware.yamlbeans:yamlbeans:1.09'
    compile 'org.postgresql:postgresql:9.4.1208.jre7'
    compile group: 'org.javalite', name: 'activejdbc', version: '1.4.12-SNAPSHOT'
    compile group: 'org.javalite', name: 'activejdbc-gradle-plugin', version: '1.4.12-SNAPSHOT'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.5'
    compile group: 'com.typesafe', name: 'config', version: '1.3.0'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

class MyFile extends File {

    MyFile(String pathname) {
        super(pathname)
    }

    def writeln(String content) {
        this.write(content + System.getProperty("line.separator"));
    }

    def appendln(String content) {
        this.append(content + System.getProperty("line.separator"));
    }
}

def myFile(String pathname) {
    return new MyFile('Dockerfile')
}